server:
  address: localhost
  port: 9999
#  ????? ??? ?? (graceful, immediate)? ?? ??
  shutdown: graceful
management:
  endpoints:
    web:
      exposure:
        include: '*'

spring:
  lifecycle:
#    ??? ?? ???? gradeful ?? ???? (?? 30s --> 1m?? ??)
    timeout-per-shutdown-phase: 1m
  config:
    import: classpath:additional-application.properties
  datasource:
    url: jdbc:h2:mem:sbipdb;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true
#  jpa:
#    hibernate:
#      ddl-auto: none
#  sql:
#    init:
#      mode: always

app:
  sbip:
    ct:
      name: CourseTracker
      ip: 127.0.0.1
      port: 9090
      security:
        enable: true
        token: saldfksdklfsdlfkjds
        roles: USER,ADMINS
logging:
  pattern:
    console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %clr(${PID:- }){green} %magenta([%thread]) %highlight([%-5level]) %clr(%-40.40logger{39}){cyan} %msg%n'
  file:
    path: ./logs
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7

# CacheManager 설정을 위한 옵션 지정

cache:
  storage: memory2
  cacheNames:
    - course
    - author
    - user
#  storage: redis


